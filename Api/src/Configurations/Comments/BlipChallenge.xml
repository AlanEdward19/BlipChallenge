<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlipChallenge</name>
    </assembly>
    <members>
        <member name="T:BlipChallenge.Common.CommonModule">
            <summary>
               Módulo para configuração de dependências comuns.
            </summary>
        </member>
        <member name="M:BlipChallenge.Common.CommonModule.ConfigureCommonRelatedDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Método para resolver as dependências comuns.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Common.Interfaces.IHandler`2">
            <summary>
                Interface para padronizar handlers.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:BlipChallenge.Common.Interfaces.IHandler`2.HandleAsync(`1,System.Threading.CancellationToken)">
            <summary>
                Método para lidar com operações.
            </summary>
            <param name="item"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel">
            <summary>
            ViewModel para representar um repositório do GitHub
            </summary>
            <param name="name"></param>
            <param name="htmlUrl"></param>
            <param name="language"></param>
            <param name="description"></param>
            <param name="createdAt"></param>
        </member>
        <member name="M:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel.#ctor(System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            ViewModel para representar um repositório do GitHub
            </summary>
            <param name="name"></param>
            <param name="htmlUrl"></param>
            <param name="language"></param>
            <param name="description"></param>
            <param name="createdAt"></param>
        </member>
        <member name="P:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel.Name">
            <summary>
            Nome do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel.HtmlUrl">
            <summary>
            Url do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel.Language">
            <summary>
            Linguagem de programação do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel.Description">
            <summary>
            Descrição do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel.CreatedAt">
            <summary>
            Data de criação do repositório
            </summary>
        </member>
        <member name="T:BlipChallenge.Configurations.EndpointsConfiguration">
            <summary>
                Configuração dos Endpoints
            </summary>
        </member>
        <member name="M:BlipChallenge.Configurations.EndpointsConfiguration.MapEndpoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Mapeia os endpoint.
            </summary>
            <param name="app">The app.</param>
            <param name="configuration">The configuration.</param>
            <returns>An IEndpointRouteBuilder.</returns>
        </member>
        <member name="M:BlipChallenge.Configurations.EndpointsConfiguration.ConfigureEndpoints(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configura os endpoints.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Configurations.MiddlewareConfiguration">
            <summary>
                Classe para configuração de middlewares
            </summary>
        </member>
        <member name="M:BlipChallenge.Configurations.MiddlewareConfiguration.ConfigureMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Método para configurar os middlewares
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:BlipChallenge.Configurations.SwaggerConfiguration.ConfigureSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Método para configurar o Swagger
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Configurations.ConfigureValidator">
            <summary>
               Configura os validadores da aplicação
            </summary>
        </member>
        <member name="M:BlipChallenge.Configurations.ConfigureValidator.ConfigureValidators(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configura os validadores da aplicação
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GetRepositories.Builders.CarrouselItemBuilder">
            <summary>
            Classe para construção de itens do carrossel
            </summary>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.Builders.CarrouselItemBuilder.AddItem(BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel)">
            <summary>
            Método para adicionar um item ao carrossel
            </summary>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.Builders.CarrouselItemBuilder.Build">
            <summary>
            Método para construir o carrossel
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GetRepositories.Enums.ERepositoryType">
            <summary>
            Enum que representa o tipo de repositório que deseja buscar
            </summary>
        </member>
        <member name="F:BlipChallenge.Features.GitHubRepository.GetRepositories.Enums.ERepositoryType.User">
            <summary>
            Repositório de usuário
            </summary>
        </member>
        <member name="F:BlipChallenge.Features.GitHubRepository.GetRepositories.Enums.ERepositoryType.Organization">
            <summary>
            Repositório de organização
            </summary>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery">
            <summary>
            Classe que representa a query para buscar repositórios no GitHub
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery.UserName">
            <summary>
            Nome do usuário do GitHub
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery.ProgrammingLanguage">
            <summary>
            Nome da linguagem de programação que deseja buscar
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery.Rows">
            <summary>
            Quantidade de repositórios que deseja retornar na busca
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery.Type">
            <summary>
            Tipo de repositório que deseja buscar, 0 = Usuário, 1 = Organização
            </summary>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQueryHandler">
            <summary>
            Handler para query de busca de repositórios
            </summary>
            <param name="gitHubApi"></param>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQueryHandler.#ctor(BlipChallenge.Common.Services.GithubApi.IGitHubApi)">
            <summary>
            Handler para query de busca de repositórios
            </summary>
            <param name="gitHubApi"></param>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQueryHandler.HandleAsync(BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery,System.Threading.CancellationToken)">
            <summary>
            Método que executa a query de busca de repositórios
            </summary>
            <param name="query"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQueryValidator">
            <summary>
            Validador para a query de busca de repositórios
            </summary>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQueryValidator.#ctor">
            <summary>
            Validações para a query de busca de repositórios
            </summary>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel">
            <summary>
            ViewModel para repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.Name">
            <summary>
            Nome do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.HtmlUrl">
            <summary>
            Url do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.Language">
            <summary>
            Linguagem de programação do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.Description">
            <summary>
            Descrição do repositório
            </summary>
        </member>
        <member name="P:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.CreatedAt">
            <summary>
            Data de criação do repositório
            </summary>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.#ctor(System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Construtor padrão com todos os parâmetros
            </summary>
            <param name="name"></param>
            <param name="htmlUrl"></param>
            <param name="language"></param>
            <param name="description"></param>
            <param name="createdAt"></param>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel.#ctor(BlipChallenge.Common.Services.GithubApi.GitHubRepositoryViewModel)">
            <summary>
            Construtor com parâmetro de ViewModel do GitHub
            </summary>
            <param name="gitHubRepositoryViewModel"></param>
        </member>
        <member name="T:BlipChallenge.Features.GitHubRepository.GitHubRepositoryController">
            <summary>
            Controladora para rotas relacionadas a repositórios do GitHub
            </summary>
        </member>
        <member name="M:BlipChallenge.Features.GitHubRepository.GitHubRepositoryController.GetRepositories(BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery,BlipChallenge.Common.Interfaces.IHandler{System.Collections.Generic.List{BlipChallenge.Features.GitHubRepository.GetRepositories.RepositoryViewModel},BlipChallenge.Features.GitHubRepository.GetRepositories.GetRepositoryQuery},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Retorna os repositórios mais antigos de acordo com a linguagem de programação
            </summary>
            <param name="query"></param>
            <param name="handler"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:BlipChallenge.Middleware.ExceptionMiddleware">
            <summary>
                Middleware para tratamento de exceções
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:BlipChallenge.Middleware.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{BlipChallenge.Middleware.ExceptionMiddleware})">
            <summary>
                Middleware para tratamento de exceções
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:BlipChallenge.Middleware.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                Método para invocar o middleware
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Refit.Implementation.Generated">
            <inheritdoc />
        </member>
        <member name="T:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi">
            <inheritdoc />
        </member>
        <member name="P:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi.Client">
            <inheritdoc />
        </member>
        <member name="M:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi.#ctor(System.Net.Http.HttpClient,Refit.IRequestBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi.GetUserRepositoriesAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi.GetOrgRepositoriesAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi.BlipChallenge#Common#Services#GithubApi#IGitHubApi#GetUserRepositoriesAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Refit.Implementation.Generated.BlipChallengeCommonServicesGithubApiIGitHubApi.BlipChallenge#Common#Services#GithubApi#IGitHubApi#GetOrgRepositoriesAsync(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
